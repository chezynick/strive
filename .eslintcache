[{"/Users/nickchesterton/projects/strive-app/src/index.js":"1","/Users/nickchesterton/projects/strive-app/src/reportWebVitals.js":"2","/Users/nickchesterton/projects/strive-app/src/App.js":"3","/Users/nickchesterton/projects/strive-app/src/Firebase.js":"4","/Users/nickchesterton/projects/strive-app/src/firebase.js":"5","/Users/nickchesterton/projects/strive-app/src/components/Nav.js":"6","/Users/nickchesterton/projects/strive-app/src/components/Menu.js":"7","/Users/nickchesterton/projects/strive-app/src/components/ProfileMenu.js":"8","/Users/nickchesterton/projects/strive-app/src/Dashboard.js":"9","/Users/nickchesterton/projects/strive-app/src/components/UserContainer.js":"10","/Users/nickchesterton/projects/strive-app/src/components/ActivityContainer.js":"11","/Users/nickchesterton/projects/strive-app/src/components/ProfileSection.js":"12","/Users/nickchesterton/projects/strive-app/src/components/Activity.js":"13","/Users/nickchesterton/projects/strive-app/src/components/Upload.js":"14","/Users/nickchesterton/projects/strive-app/src/components/DetailBox.js":"15","/Users/nickchesterton/projects/strive-app/src/components/Weather.js":"16","/Users/nickchesterton/projects/strive-app/src/components/Challenges.js":"17","/Users/nickchesterton/projects/strive-app/src/components/Training.js":"18","/Users/nickchesterton/projects/strive-app/src/components/Explore.js":"19","/Users/nickchesterton/projects/strive-app/src/components/Footer.js":"20","/Users/nickchesterton/projects/strive-app/src/components/UserBox.js":"21"},{"size":474,"mtime":1607172055684,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607166553694,"results":"24","hashOfConfig":"23"},{"size":2608,"mtime":1607614190271,"results":"25","hashOfConfig":"23"},{"size":478,"mtime":1607172112697,"results":"26","hashOfConfig":"23"},{"size":478,"mtime":1607172112697,"results":"27","hashOfConfig":"23"},{"size":608,"mtime":1607598219305,"results":"28","hashOfConfig":"23"},{"size":1959,"mtime":1607595219215,"results":"29","hashOfConfig":"23"},{"size":1739,"mtime":1607599303367,"results":"30","hashOfConfig":"23"},{"size":1017,"mtime":1607591697451,"results":"31","hashOfConfig":"23"},{"size":1112,"mtime":1607603100567,"results":"32","hashOfConfig":"23"},{"size":1663,"mtime":1607615426607,"results":"33","hashOfConfig":"23"},{"size":2782,"mtime":1607615898842,"results":"34","hashOfConfig":"23"},{"size":5855,"mtime":1607623698666,"results":"35","hashOfConfig":"23"},{"size":3572,"mtime":1607613089146,"results":"36","hashOfConfig":"23"},{"size":3013,"mtime":1607611291583,"results":"37","hashOfConfig":"23"},{"size":1753,"mtime":1607611308009,"results":"38","hashOfConfig":"23"},{"size":433,"mtime":1607595634172,"results":"39","hashOfConfig":"23"},{"size":1496,"mtime":1607598989271,"results":"40","hashOfConfig":"23"},{"size":1820,"mtime":1607599499004,"results":"41","hashOfConfig":"23"},{"size":1882,"mtime":1607596209508,"results":"42","hashOfConfig":"23"},{"size":892,"mtime":1607598560036,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"kkosag",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/nickchesterton/projects/strive-app/src/index.js",[],["91","92"],"/Users/nickchesterton/projects/strive-app/src/reportWebVitals.js",[],"/Users/nickchesterton/projects/strive-app/src/App.js",["93"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport firebase from './firebase';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n//import components\nimport Nav from './components/Nav';\nimport Dashboard from './Dashboard';\nimport Upload from './components/Upload';\nimport Explore from './components/Explore';\nimport Challenges from './components/Challenges';\nimport Training from './components/Training';\nimport Footer from './components/Footer';\n\nfunction App() {\n\t//state for users and activities\n\tconst [users, setUsers] = useState([]);\n\tconst [activities, setActivities] = useState([]);\n\tconst [things, setThings] = useState([]);\n\tconst [currentUser, setCurrentUser] = useState([]);\n\n\t//import database\n\tconst ref = firebase.firestore().collection('users');\n\tconst data = firebase.firestore().collection('activities');\n\tconst thing = firebase.firestore().collection('things');\n\n\tconst getUsers = () => {\n\t\tref.onSnapshot((querySnapshot) => {\n\t\t\tconst items = [];\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\titems.push(doc.data());\n\t\t\t});\n\n\t\t\tsetUsers(items);\n\t\t\tsetCurrentUser(items[1]);\n\t\t});\n\t};\n\tconst getActivities = () => {\n\t\tdata.onSnapshot((querySnapshot) => {\n\t\t\tconst items = [];\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\tconst actObj = doc.data();\n\t\t\t\tactObj.id = doc.id;\n\t\t\t\titems.push(actObj);\n\t\t\t});\n\n\t\t\titems.sort((a, b) => (a.date < b.date ? 1 : -1));\n\t\t\tsetActivities(items);\n\t\t});\n\t};\n\tconst getThings = () => {\n\t\tthing.onSnapshot((querySnapshot) => {\n\t\t\tconst items = [];\n\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\titems.push(doc.data());\n\t\t\t});\n\t\t\tsetThings(items);\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tgetUsers();\n\t\tgetActivities();\n\t\tgetThings();\n\t}, []);\n\n\treturn (\n\t\t<HashRouter basename=\"/\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<Nav users={users} currentUser={currentUser} setCurrentUser={setCurrentUser} />\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t<Dashboard\n\t\t\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\t\t\tactivities={activities}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tsetCurrentUser={setCurrentUser}\n\t\t\t\t\t\t\t\tthings={things}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/explore\" render={() => <Explore things={things} />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/challenges\"\n\t\t\t\t\t\trender={() => <Challenges currentUser={currentUser} activities={activities} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/training\" render={() => <Training />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/upload\"\n\t\t\t\t\t\trender={() => <Upload currentUser={currentUser} activities={activities} />}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","/Users/nickchesterton/projects/strive-app/src/Firebase.js",[],"/Users/nickchesterton/projects/strive-app/src/firebase.js",[],"/Users/nickchesterton/projects/strive-app/src/components/Nav.js",[],"/Users/nickchesterton/projects/strive-app/src/components/Menu.js",[],"/Users/nickchesterton/projects/strive-app/src/components/ProfileMenu.js",[],"/Users/nickchesterton/projects/strive-app/src/Dashboard.js",[],"/Users/nickchesterton/projects/strive-app/src/components/UserContainer.js",[],"/Users/nickchesterton/projects/strive-app/src/components/ActivityContainer.js",[],"/Users/nickchesterton/projects/strive-app/src/components/ProfileSection.js",["94"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\n//import photos and icons\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBiking, faRunning } from '@fortawesome/free-solid-svg-icons';\n\nconst ProfileSection = ({ currentUser, activities }) => {\n\tconst [totalActive, setTotalActive] = useState([]);\n\tconst [totalDistance, setTotalDistance] = useState(0);\n\n\tuseEffect(() => {\n\t\tconst result = activities.filter((activity) => activity.user === currentUser.name);\n\t\tsetTotalActive(result);\n\t\t//create array to determine current users total distance covered\n\t\tconst resultArr = Array.from(result);\n\t\t//if returns only 1 object\n\t\tif (resultArr.length === 1) {\n\t\t\tconst atheleteDistance = resultArr[0].distance;\n\t\t\tsetTotalDistance(atheleteDistance);\n\t\t\t//returns array of more than 1\n\t\t} else if (resultArr.length === 0) {\n\t\t\treturn totalDistance;\n\t\t} else if (resultArr.length > 1) {\n\t\t\tconst atheleteDistance = resultArr.reduce((cum, next) => Number(cum.distance) + Number(next.distance));\n\t\t\tsetTotalDistance(atheleteDistance);\n\t\t}\n\t}, [currentUser]);\n\n\treturn (\n\t\t<ProfileStyle>\n\t\t\t<ProfileOverview>\n\t\t\t\t<img src={currentUser.image} alt=\"userpic\" />\n\t\t\t\t<h3>{currentUser.name}</h3>\n\t\t\t\t<InfoBox>\n\t\t\t\t\t<p>Following</p>\n\t\t\t\t\t<p>Followers</p>\n\t\t\t\t\t<p>Activities</p>\n\t\t\t\t\t<h5>{currentUser.followers}</h5>\n\t\t\t\t\t<h5>{currentUser.following}</h5>\n\t\t\t\t\t<h5>{totalActive.length}</h5>\n\t\t\t\t</InfoBox>\n\t\t\t</ProfileOverview>\n\t\t\t<ProfileOverview>\n\t\t\t\t<IconHolder>\n\t\t\t\t\t<FontAwesomeIcon color=\"#888888\" size=\"2x\" icon={faBiking} />\n\t\t\t\t\t<FontAwesomeIcon color=\"#888888\" size=\"2x\" icon={faRunning} />\n\t\t\t\t</IconHolder>\n\t\t\t\t<h4>Total Distance</h4>\n\t\t\t\t<h2>{totalDistance}</h2>\n\t\t\t</ProfileOverview>\n\t\t</ProfileStyle>\n\t);\n};\n\nexport default ProfileSection;\n\nconst ProfileStyle = styled.div`\n\twidth: 80%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tmargin: 10%;\n\tmargin-top: 15%;\n\t@media (max-width: 800px) {\n\t\tmargin-top: 20%;\n\t\tmargin-bottom: 20%;\n\t}\n\t@media (max-width: 600px) {\n\t\tmargin-top: 25%;\n\t\tmargin-bottom: 25%;\n\t}\n`;\nconst ProfileOverview = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tbackground-color: white;\n\theight: auto;\n\tmargin-top: 40px;\n\tborder-radius: 0.5rem;\n\n\timg {\n\t\twidth: 80px;\n\t\theight: 80px;\n\t\tborder-radius: 50%;\n\t\tmargin-top: -40px;\n\t}\n\th2 {\n\t\tcolor: #8ce98c;\n\t}\n\th4 {\n\t\tcolor: #888888;\n\t\tfont-weight: 400;\n\t}\n`;\nconst InfoBox = styled.div`\n\twidth: 100%;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\th5 {\n\t\tpadding: 0;\n\t\tmargin-top: 0;\n\t}\n`;\nconst IconHolder = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\theight: auto;\n\tmargin: 0;\n\tpadding: 5%;\n\tbackground: #f0efef;\n\tjustify-content: space-evenly;\n`;\n","/Users/nickchesterton/projects/strive-app/src/components/Activity.js",[],"/Users/nickchesterton/projects/strive-app/src/components/Upload.js",[],"/Users/nickchesterton/projects/strive-app/src/components/DetailBox.js",[],"/Users/nickchesterton/projects/strive-app/src/components/Weather.js",["95"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloud, faCloudSun, faCloudRain } from '@fortawesome/free-solid-svg-icons';\n\nconst Weather = ({ city, things }) => {\n\tconst [currentTemp, setCurrentTemp] = useState(0);\n\tconst [clouds, setClouds] = useState(50);\n\tconst [currentWind, setCurrentWind] = useState(0);\n\tconst [weatherImage, setWeatherImage] = useState(faCloudRain);\n\tconst key = things[1].key;\n\tconst cityWeather = async (city) => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=` + city + `&units=metric&APPID=` + key\n\t\t\t);\n\t\t\tconst weather = await response.json();\n\n\t\t\tsetCurrentTemp(weather.main.temp.toFixed(0));\n\t\t\tsetCurrentWind(weather.wind.speed.toFixed(0));\n\t\t\tsetClouds(weather.clouds.all);\n\t\t} catch (err) {\n\t\t\tconsole.log(err, 'not worked this');\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tcityWeather(city);\n\t}, []);\n\tuseEffect(() => {\n\t\tconst images = () => {\n\t\t\t//change the weather icon depending on weather\n\n\t\t\tif (clouds > 70) {\n\t\t\t\tsetWeatherImage(faCloudRain);\n\t\t\t} else if (clouds > 70) {\n\t\t\t\tsetWeatherImage(faCloud);\n\t\t\t} else if (clouds > 30 && clouds < 70) {\n\t\t\t\tsetWeatherImage(faCloudSun);\n\t\t\t} else if (clouds <= 30) {\n\t\t\t\tsetWeatherImage(faSun);\n\t\t\t} else {\n\t\t\t\tsetWeatherImage(faCloud);\n\t\t\t}\n\t\t};\n\t\timages();\n\t}, [clouds]);\n\treturn (\n\t\t<WeatherBox>\n\t\t\t<FontAwesomeIcon size=\"2x\" icon={weatherImage} />\n\t\t\t<h3>Temp: {currentTemp}C</h3>\n\t\t\t<h3>Wind: {currentWind}mph</h3>\n\t\t</WeatherBox>\n\t);\n};\n\nexport default Weather;\nconst WeatherBox = styled.div`\n\twidth: 100%;\n\theight: 50%;\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n`;\n","/Users/nickchesterton/projects/strive-app/src/components/Challenges.js",[],"/Users/nickchesterton/projects/strive-app/src/components/Training.js",[],"/Users/nickchesterton/projects/strive-app/src/components/Explore.js",["96"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nconst Explore = ({ things }) => {\n\tconst [dataReturned, setDataReturned] = useState(false);\n\tconst [data, setData] = useState();\n\tconst key = things[0].key;\n\tconst recipeData = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://api.spoonacular.com/recipes/random?number=10&tags=vegan/information&apiKey=' +\n\t\t\t\t\tkey +\n\t\t\t\t\t'&includeNutrition=false.'\n\t\t\t);\n\t\t\tconst Data = await response.json();\n\t\t\tsetData(...[Data]);\n\t\t\tconsole.log(Data);\n\t\t\tsetDataReturned(true);\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tconsole.log(err, 'not worked this');\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\trecipeData();\n\t}, []);\n\tif (dataReturned === true) {\n\t\treturn (\n\t\t\t<ExploreStyle>\n\t\t\t\t{data.recipes.map((recipe) => (\n\t\t\t\t\t<RecipeBox>\n\t\t\t\t\t\t<a href={recipe.sourceUrl}>\n\t\t\t\t\t\t\t<img src={recipe.image} alt=\"foodpic\" />\n\t\t\t\t\t\t\t<h3>{recipe.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</RecipeBox>\n\t\t\t\t))}\n\t\t\t</ExploreStyle>\n\t\t);\n\t} else {\n\t\treturn <ExploreStyle></ExploreStyle>;\n\t}\n};\nexport default Explore;\nconst ExploreStyle = styled.div`\n\tmargin-top: 5%;\n\twidth: 80%;\n\theight: auto;\n\tmargin-left: 10%;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-evenly;\n\t@media (max-width: 800px) {\n\t\tflex-direction: column;\n\t\tmargin-top: 15%;\n\t\tmargin-bottom: 15%;\n\t}\n\t@media (max-width: 500px) {\n\t\tflex-direction: column;\n\t\tmargin-top: 23%;\n\t\tmargin-bottom: 20%;\n\t}\n`;\nconst RecipeBox = styled.div`\n\twidth: 30%;\n\theight: auto;\n\tbox-shadow: 10px 10px 5px rgba(0, 0, 0, 0.05);\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\tmargin: 5%;\n\t@media (max-width: 800px) {\n\t\twidth: 80%;\n\t}\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: #555555;\n\t}\n\th3 {\n\t\ttext-decoration: none;\n\t}\n\timg {\n\t\twidth: 100%;\n\t\theight: auto;\n\t}\n`;\n","/Users/nickchesterton/projects/strive-app/src/components/Footer.js",[],"/Users/nickchesterton/projects/strive-app/src/components/UserBox.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":64,"column":5,"nodeType":"103","endLine":64,"endColumn":7,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":29,"column":5,"nodeType":"103","endLine":29,"endColumn":18,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":28,"column":5,"nodeType":"103","endLine":28,"endColumn":7,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":25,"column":5,"nodeType":"103","endLine":25,"endColumn":7,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getActivities', 'getThings', and 'getUsers'. Either include them or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'activities' and 'totalDistance'. Either include them or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'city' and 'cityWeather'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'recipeData'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [getActivities, getThings, getUsers]",{"range":"125","text":"126"},"Update the dependencies array to be: [activities, currentUser, totalDistance]",{"range":"127","text":"128"},"Update the dependencies array to be: [city, cityWeather]",{"range":"129","text":"130"},"Update the dependencies array to be: [recipeData]",{"range":"131","text":"132"},[1701,1703],"[getActivities, getThings, getUsers]",[1106,1119],"[activities, currentUser, totalDistance]",[998,1000],"[city, cityWeather]",[696,698],"[recipeData]"]